//- items - массив объектов {id, minAmount, maxAmount, forms(формы слова), itemName, startAmount}
include ../title/title

mixin dropdown({ placeholder, items, expanded=false, withButtons=false, generalForms, separatedElementsInInput='' })
  - let dropdownClasses = ['dropdown'];
  - let dropdownJSClass = 'js-dropdown';
  - let expandButtonClasses = ['dropdown__expand-button', 'js-dropdown__expand-button'];
  if withButtons
    - dropdownJSClass = `${ dropdownJSClass }_with-buttons`;
    - dropdownClasses.push('dropdown_with-buttons')
  if expanded
    - dropdownClasses.push('dropdown_expanded');
    - expandButtonClasses.push('dropdown__expand-button_rotated');
  - dropdownClasses.push(dropdownJSClass);
  div(class=dropdownClasses data-placeholder=placeholder data-forms=generalForms data-separated-elements=separatedElementsInInput)
    .dropdown__field.js-dropdown__field
      .dropdown__text.js-dropdown__text
      button(class=expandButtonClasses) expand_more
    .dropdown__menu
      each item in items
        .dropdown__menu-item.js-dropdown__menu-item(data-id=item.id data-min-amount=item.minAmount data-max-amount=item.maxAmount data-forms=item.forms)
          .dropdown__menu-item-name
            +title('low', item.itemName)
          .dropdown__menu-item-controls
            button.dropdown__decrease-button.js-dropdown__decrease-button -
            span.dropdown__amount.js-dropdown__amount !{ item.startAmount }
            button.dropdown__increase-button.js-dropdown__increase-button +
      if withButtons
        .dropdown__buttons-wrapper
          button.dropdown__clear-button.js-dropdown__clear-button очистить
          button.dropdown__apply-button.js-dropdown__apply-button применить